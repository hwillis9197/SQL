In this project, I query a sales database with a schema including 11 tables to answer a range of questions. In this project, I got the opportunity to practice JOINS thoroughly. Enjoy! 

#Show Customers (their full names, customer ID, and country) who are not in the U.S.;
SELECT CustomerId, FirstName, LastName, Country FROM customers WHERE Country <> 'USA';

#Show only the Customers from Brazil.;
SELECT * FROM customers WHERE Country = 'Brazil';

#Find the Invoices of customers who are from Brazil. The resulting table should show the customers full name, Invoice ID, Date of the invoice, and billing country.;
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry FROM customers c
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE i.BillingCountry = 'Brazil'
ORDER BY InvoiceDate DESC;

#Show the Employees who are Sales Agents.;
SELECT * FROM employees WHERE Title = 'Sales Support Agent';

#Find a unique/distinct list of billing countries from the Invoice table.;
SELECT DISTINCT BillingCountry FROM invoices;

#Provide a query that shows the invoices associated with each sales agent.;
SELECT * FROM employees;
SELECT * FROM customers;
SELECT CASE WHEN c.SupportRepid = 3 THEN 'Jane Peacock'
WHEN c.SupportRepid = 4 THEN 'Margaret Park'
ELSE 'Steve Johnson' 
END AS Employee, i.invoiceid
FROM invoices i
LEFT JOIN customers c
ON i.Customerid = c.Customerid
ORDER BY Employee;

#Which sales representative was the most productive?;
SELECT CASE WHEN c.SupportRepid = 3 THEN 'Jane Peacock'
WHEN c.SupportRepid = 4 THEN 'Margaret Park'
ELSE 'Steve Johnson' 
END AS Employee, i.invoiceid
FROM invoices i
LEFT JOIN customers c
ON i.Customerid = c.Customerid
GROUP BY Employee
ORDER BY invoiceid DESC
LIMIT 1;

#Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.;
SELECT i.Total, c.FirstName, c.LastName, i.BillingCountry AS Country,CASE WHEN c.SupportRepid = 3 THEN 'Jane Peacock'
WHEN c.SupportRepid = 4 THEN 'Margaret Park'
ELSE 'Steve Johnson' 
END AS AgentName
FROM invoices i
LEFT JOIN customers c
ON i.Customerid = c.Customerid
ORDER BY Total DESC; 

#How many Invoices were there in 2009?;
SELECT COUNT(InvoiceID) AS InvoicesIn2009 FROM invoices WHERE InvoiceDate LIKE '%2009%';

#What are the total sales for 2009?;
SELECT ROUND(SUM(Total),2) AS TotalSaleFrom2009 FROM invoices WHERE InvoiceDate LIKE '2009%';

#Write a query that includes the purchased track name with each invoice line ID.;
SELECT t.Name AS TrackName, i.InvoiceID
FROM invoice_items i
LEFT JOIN tracks t
ON i.Trackid = t.Trackid;

#Write a query that includes the purchased track name AND artist name with each invoice line ID.;
SELECT a.Name AS ArtistName, t.Name AS TrackName, i.InvoiceID
FROM tracks t
LEFT JOIN invoice_items i
ON i.Trackid = t.Trackid
JOIN albums al
ON al.Albumid = t.Albumid
LEFT JOIN artists a 
ON al.Artistid = a. Artistid;

#Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.;
SELECT t.Name AS TrackName, a.Title AS AlbumName, m.Name AS MediaType, g.Name AS GenreName
FROM tracks t
LEFT JOIN albums a ON a.AlbumId = t.AlbumId
LEFT JOIN media_types m ON m.MediaTypeId = t.MediaTypeId
LEFT JOIN genres g ON g.GenreId = t.GenreId;

#Show the total sales made by each sales agent.;
SELECT CASE WHEN c.SupportRepid = 3 THEN 'Jane Peacock'
WHEN c.SupportRepid = 4 THEN 'Margaret Park'
ELSE 'Steve Johnson' 
END AS AgentName, ROUND(SUM(i.Total),2) AS TotalSales
FROM invoices i
LEFT JOIN customers c
ON i.Customerid = c.Customerid
GROUP BY AgentName
ORDER BY TotalSales DESC; 

#Which sales agent made the most dollars in sales in 2009?;
SELECT CASE WHEN c.SupportRepid = 3 THEN 'Jane Peacock'
WHEN c.SupportRepid = 4 THEN 'Margaret Park'
ELSE 'Steve Johnson' 
END AS AgentName, ROUND(SUM(i.Total),2) AS TotalSales
FROM invoices i
LEFT JOIN customers c
ON i.Customerid = c.Customerid
WHERE InvoiceDate LIKE '2009%'
GROUP BY AgentName
ORDER BY TotalSales DESC
Limit 1; 
