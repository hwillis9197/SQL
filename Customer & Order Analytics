#In this SQL project, I'm querying a database with multiple tables in it to quantify statistics about customer and oder data using SQLite.

#1 How many orders were placed in January?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderID <> 'orderID';

#2 How many of those orders were for an iPhone?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales 
WHERE Product='iPhone' AND length(orderID) = 6
AND orderID <> 'orderID';

#3 Show the customer account numbers for all the orders placed in February.
SELECT c.acctnum FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales fs
ON c.order_id=fs.orderID
WHERE length(orderID) = 6
AND orderID <> 'orderID';

#4 Which product was the cheapest one sold in January and what was the price?
SELECT Product, MIN(price) 
FROM BIT_DB.JanSales 
WHERE length(orderID)=6 AND orderID <> 'orderID' AND PRICE <>'Price Each'
GROUP BY Product, price
ORDER BY price ASC LIMIT 1;

#5 What is the total revenue for each product sold in January?
SELECT ROUND(SUM(Quantity) * price, 2) AS revenue, Product
FROM BIT_DB.JanSales
WHERE Product<>'Product' 
GROUP BY Product;

#6 Which products were sold in February at 548 Linoln St, WA 98101, how many were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity)*price AS revenue 
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

#7 How many customers ordered more than 2 products at a time in February and what was the average amount spent fo those customers?
SELECT COUNT(c.acctnum) AS cust_amount, ROUND(AVG(Quantity)*price, 2) AS avg_spent
FROM BIT_DB.customers c
LEFT JOIN BIT_DB.FebSales fs
ON c.order_id = fs.orderID
WHERE Quantity >2 AND length(orderID)=6 AND orderID <> 'orderID' AND price <> 'Price Each';
